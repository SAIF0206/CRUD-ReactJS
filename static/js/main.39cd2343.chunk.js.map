{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/layout/Header.js","components/pages/NotFound.js","components/pages/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","PropTyps","PropTypes","object","isRequired","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","typeof","classnames","defaultProps","AddContact","errors","e","target","onSubmit","preventDefault","newContact","post","history","push","EditContact","updateContact","match","params","put","About","Header","branding","href","NotFound","Test","title","body","fetch","then","response","json","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.39cd2343.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        //spread\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        //spread\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    //dispatch\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  //Fetch API\r\n  async componentDidMount() {\r\n    //Fake Rest API\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    //res.data => to acces the data from response\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  //onDeleteFunction\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      //Fake Delete Request for actual backend. Change to template string\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    //Destructuring\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}\r\n                <i\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    })\r\n                  }\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\"\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </h4>\r\n\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.PropTyps = {\r\n  contact: PropTypes.object.isRequired\r\n  // deleteClickHandler : PropTypes.func.isRequired\r\n};\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\nclass Contacts extends Component {\r\n  //   deleteContat = id => {\r\n  //     const { contacts } = this.state;\r\n  //     const newContact = contacts.filter(contact => contact.id !== id);\r\n  //     this.setState({\r\n  //       contacts: newContact\r\n  //     });\r\n  //   };\r\n\r\n  render() {\r\n    //Make use of ContextAPI\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact </span>List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact\r\n                  key={contact.id}\r\n                  contact={contact}\r\n                  // deleteClickHandler={this.deleteContat.bind(this, contact.id)}\r\n                />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n\r\n const TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n })=> {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input \r\n                typeof={type}\r\n                name = {name}\r\n                className={classnames('form-control form-control-lg', {\r\n                    'is-invalid' : error\r\n                })}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange = {onChange} \r\n            >\r\n            </input>\r\n            {\r\n                error && <div className=\"invalid-feedback\">{error}\r\n                </div>\r\n            }\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nTextInputGroup.propTypes ={\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired, \r\n    error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\ntype : 'text'\r\n};\r\nexport default TextInputGroup;","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n//import { v4 as uuid } from \"uuid\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    //Check for Errors\r\n    if (name === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          name: \"Name is Required\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          email: \"Email is Required\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          phone: \"Phone is Required\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      //id: uuid(),\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    //Post request using Axios\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    //Clear the state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    //back to Home Page\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    //Return from context Consumer\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          //value contains the state.\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  ></input>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n//import { v4 as uuid } from \"uuid\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    //Check for Errors\r\n    if (name === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          name: \"Name is Required\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          email: \"Email is Required\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          phone: \"Phone is Required\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    const updateContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updateContact\r\n    );\r\n\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    //Clear the state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    //back to Home Page\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    //Return from context Consumer\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          //value contains the state.\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  ></input>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Me</h1>\r\n      <p className=\"text-secondary\">Hii everyone,</p>\r\n      <p className=\"lead\">\r\n        Currently, I am working as a <b>Technical Team Lead Intern</b> to\r\n        develop an Automated route Planning System. Using reactJS as front-end\r\n        and NodeJS as backend. I am pursuing my Post graduation in System\r\n        Analysis from\r\n        <b>NUS-ISS</b>, and I completed my Bachelor's in Computer Science and\r\n        Engineering.\r\n        <br /> <b>Presently looking for a full-time job in IT.</b>\r\n      </p>\r\n      <p className=\"text-secondary\">Basic Learning from ReactJS</p>\r\n      <br />\r\n\r\n      <p className=\"text-secondary\">\r\n        Author: SAIF\r\n        <br />\r\n        SINGAPORE\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n//Validation on Property\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//function Header()   --Normal Function Converted to ARROW FUNCTION.\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\"></i> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\"></i>Add\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\"></i> About\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/test\" className=\"nav-link\">\r\n                <i className=\"fab fa-angellist\"></i> Test\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\n//Deafult props\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\n\r\n//Validation\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","//Functional Component\r\nimport React from \"react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\"> 404</span>Page Not found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    body: \"\"\r\n  };\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          title: data.title,\r\n          body: data.body\r\n        })\r\n      );\r\n  }\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h2>Test</h2>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport About from \"./components/pages/About\";\nimport Header from \"./components/layout/Header\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/pages/Test\";\nimport { Provider } from \"./context\";\n\n//Import Bootstrap\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, \n    document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}